<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<configuration>
    
    <!-- Configuration of the local database -->
    <localDatabase>
        <databaseFolder>local</databaseFolder>
        <lib>lib/h2-1.3.175.jar</lib>
        <driver>org.h2.Driver</driver>
        <urlPattern>jdbc:h2:%s;LOG=0;UNDO_LOG=0</urlPattern>
        <localPKType>VARCHAR</localPKType>
        <localNPKType>NVARCHAR</localNPKType>
        <localPKLength>10000</localPKLength>
        <user></user>
        <password></password>
    </localDatabase>
    
    <!--
    nullColumnPlaceholder:
    
	For DBUnit flat XML files, null columns can carry a placeholder value
	which can later be replaced using a ReplacementDataSet.
	In Flat XML files the first row of a table defines the metadata. If a null
	column is omitted, none of the following rows can have this column! This is the
	default behaviour of Jailer.
	Thus, define a null placeholder and replace it with a null value when you load
	the data set with DBUnit.     
    -->
	<!--
	<nullColumnPlaceholder>[NULL]</nullColumnPlaceholder>
	-->

	<!--  number of columns per import-filter-mapping-table -->
	<columnsPerIFMTable>8</columnsPerIFMTable>
    
    <!--
		If minimize-UPK is true, the UPK don't preserve order. This minimizes
		the size of the UPK.
	-->
	<doMinimizeUPK>false</doMinimizeUPK>

    <!-- HTML renderer -->	
    <renderer>
        <maxDepth>0</maxDepth>
        <outputFolder>render</outputFolder>
    </renderer>
    
    <!-- additional SQL keywords -->
	<additionalSQLKeywords>sensitive, datetime</additionalSQLKeywords>

    <!-- for Oracle -->
    <dbms>
        <id>ORACLE</id>
        <displayName>Oracle</displayName>
        <urlPattern>jdbc:oracle.*</urlPattern>
        <sqlDialect>
            <needsValuesKeywordForDeletes>false</needsValuesKeywordForDeletes>
            <supportsInClauseForDeletes>true</supportsInClauseForDeletes>
            <supportsMultiRowInserts>false</supportsMultiRowInserts>
            <upsertMode>MERGE</upsertMode>
        </sqlDialect>
        <jdbcProperties>
            <entry>
                <key>CatalogOptions</key>
                <value>0</value>
            </entry>
        </jdbcProperties>
        <statisticRenovator>
            <scriptFileName>script/oracle/gatherStatistics.sql</scriptFileName>
        </statisticRenovator>
        <stringLiteralEscapeSequences>
            <entry>
                <key>'</key>
                <value>''</value>
            </entry>
            <entry>
                <key>\n</key>
                <value>' || chr(10) || '</value>
            </entry>
            <entry>
                <key>\r</key>
                <value>' || chr(13) || '</value>
            </entry>
        </stringLiteralEscapeSequences>
        <tableProperties>NOLOGGING</tableProperties>
        <sessionTemporaryTableManager>
            <createIndexPrefix>CREATE INDEX </createIndexPrefix>
            <createIndexSuffix></createIndexSuffix>
            <createTablePrefix>CREATE GLOBAL TEMPORARY TABLE </createTablePrefix>
            <createTableSuffix>ON COMMIT PRESERVE ROWS</createTableSuffix>
            <dropTablePrefix>DROP TABLE </dropTablePrefix>
            <indexTablePrefix></indexTablePrefix>
        </sessionTemporaryTableManager>
        <identityInserts>false</identityInserts>
        <datePattern>'to_date('''yyyy-MM-dd''', ''YYYY-MM-DD'')'</datePattern>
        <timestampPattern>'to_timestamp('''yyyy-MM-dd HH.mm.ss'.${NANO}'', ''YYYY-MM-DD HH24.MI.SS.${NANOFORMAT}'')'</timestampPattern>
        <emptyBLOBValue>empty_blob()</emptyBLOBValue>
        <emptyCLOBValue>empty_clob()</emptyCLOBValue>
        <emptyNCLOBValue>empty_clob()</emptyNCLOBValue>
        <toBlob>to_blob(hextoraw('%s'))</toBlob>
        <toClob>to_clob('%s')</toClob>
        <toNClob>to_nclob('%s')</toNClob>
        <embeddedLobSizeLimit>3980</embeddedLobSizeLimit>
        <binaryPattern>hextoraw('%s')</binaryPattern>
        
        <!--  <avoidLeftJoin>true</avoidLeftJoin> -->
        <avoidLeftJoin>false</avoidLeftJoin>
        
        <limitTransactionSize>
        	<limit>30000</limit>
        	<additionalWhereCondition>rownum &lt;= %1$s</additionalWhereCondition>
        </limitTransactionSize>

        <rowidName>ROWID</rowidName>
        <rowidType>ROWID</rowidType>
        <useInlineViewsInDataBrowser>false</useInlineViewsInDataBrowser>
        <estimatedRowCountQuery>select TABLE_NAME, NUM_ROWS from all_tables where OWNER = '%s'</estimatedRowCountQuery>
        <virtualColumnsQuery>SELECT TABLE_NAME, COLUMN_NAME FROM ALL_TAB_COLS WHERE OWNER = '${SCHEMA}' AND VIRTUAL_COLUMN = 'YES' AND NOT DATA_TYPE = 'XMLTYPE'</virtualColumnsQuery>
        <importedKeysQuery>SELECT null, c_dest.OWNER, c_dest.TABLE_NAME, c_dest.COLUMN_NAME, null, c_src.OWNER, c_src.TABLE_NAME, c_src.COLUMN_NAME, c_src.POSITION,        null, null, c_list.CONSTRAINT_NAME, c_list.R_CONSTRAINT_NAME, null FROM ALL_CONSTRAINTS c_list, ALL_CONS_COLUMNS c_src, ALL_CONS_COLUMNS c_dest WHERE c_list.CONSTRAINT_NAME   = c_src.CONSTRAINT_NAME  AND  c_list.OWNER = c_src.OWNER  AND  c_list.R_CONSTRAINT_NAME = c_dest.CONSTRAINT_NAME  AND  c_list.R_OWNER = c_dest.OWNER  AND  c_list.CONSTRAINT_TYPE = 'R'  AND  c_src.POSITION = c_dest.POSITION  AND  c_src.OWNER = '${SCHEMA}'  ORDER BY c_src.POSITION</importedKeysQuery>
        <primaryKeysQuery>SELECT null, c_src.OWNER, c_src.TABLE_NAME, c_src.COLUMN_NAME, c_src.POSITION, c_list.CONSTRAINT_NAME FROM ALL_CONSTRAINTS c_list, ALL_CONS_COLUMNS c_src WHERE c_list.CONSTRAINT_NAME   = c_src.CONSTRAINT_NAME  AND  c_list.OWNER             = c_src.OWNER  AND  c_list.CONSTRAINT_TYPE = 'P'  AND  c_list.CONSTRAINT_NAME not like 'BIN$%'  AND  c_src.OWNER      = '${SCHEMA}'  ORDER BY c_src.POSITION</primaryKeysQuery>
        <indexInfoQuery>SELECT null, c_src.OWNER, c_src.TABLE_NAME, 0, null, c_list.CONSTRAINT_NAME, null, null, c_src.COLUMN_NAME FROM ALL_CONSTRAINTS c_list, ALL_CONS_COLUMNS c_src WHERE c_list.CONSTRAINT_NAME   = c_src.CONSTRAINT_NAME  AND  c_list.OWNER             = c_src.OWNER  AND  c_list.CONSTRAINT_TYPE = 'U'  AND  c_list.CONSTRAINT_NAME not like 'BIN$%'  AND  c_src.OWNER      = '${SCHEMA}'</indexInfoQuery>
        <identifierQuoteString>"</identifierQuoteString>
        <ddlCall>begin ? := dbms_metadata.get_ddl('${type}', '${table}', '${schema}'); end;</ddlCall>
        <explainPrepare>explain plan set statement_id = '%2$s' for %1$s</explainPrepare>
        <explainQuery>select * from table(dbms_xplan.display(NULL, '%2$s'))</explainQuery>
        <explainCleanup></explainCleanup>
        <synonymTableQuery>select '"' || TABLE_OWNER || '"."' || TABLE_NAME || '"' from ALL_SYNONYMS where OWNER = '%1$s' and SYNONYM_NAME = '%2$s'</synonymTableQuery>
        <viewTextOrDDLQuery>select TEXT from all_views where OWNER = '%1$s' and VIEW_NAME = '%2$s'</viewTextOrDDLQuery>
        <functionSourceQuery>SELECT 'Source', text FROM all_source WHERE type = 'FUNCTION' and name = '%2$s' AND owner = '%1$s' ORDER BY line</functionSourceQuery>
        <procedureSourceQuery>SELECT 'Source', text FROM all_source WHERE type = 'PROCEDURE' and name = '%2$s' AND owner = '%1$s' ORDER BY line</procedureSourceQuery>
        <packageNamesQuery>SELECT OBJECT_NAME FROM ALL_OBJECTS WHERE OBJECT_TYPE = 'PACKAGE' AND OWNER = '%1$s'</packageNamesQuery>
        <packageSourceQuery>
SELECT titel, text from (
SELECT 'Specification' as titel, line, text FROM all_source where owner='%1$s' and type='PACKAGE' and name='%2$s'
union all
SELECT 'Body' as titel, line, text FROM all_source where owner='%1$s' and type='PACKAGE BODY' and name='%2$s'
) order by titel desc, line
        </packageSourceQuery>
        <constraintsQuery>
Select CNAME, TNAME, COLNAME, CTYPE, DETAIL From
(Select 'PK' CTYPE, CONSTRAINT_NAME CNAME, TABLE_NAME TNAME, COLUMN_NAME COLNAME, null DETAIL, POSITION POS, 1 TYPEPOS
	from
		user_constraints natural join user_cons_columns
	where
		CONSTRAINT_TYPE = 'P'
		and STATUS = 'ENABLED'
		and TABLE_NAME not like 'BIN$%%'
   		and OWNER = '%1$s'
union all
Select 'Check' CTYPE, CONSTRAINT_NAME CNAME, TABLE_NAME TNAME, COLUMN_NAME COLNAME, SEARCH_CONDITION DETAIL, POSITION POS, 3 TYPEPOS
	from
		user_constraints natural join user_cons_columns
	where
		CONSTRAINT_TYPE = 'C'
		and TABLE_NAME not like 'BIN$%%'
   		and OWNER = '%1$s'
union all
	(
	Select 'Unique' CTYPE, CNAME, TNAME, COLNAME, null DETAIL, POS, 2 TYPEPOS from
		(
		Select i.INDEX_NAME CNAME, i.TABLE_NAME TNAME, c.COLUMN_NAME COLNAME, c.COLUMN_POSITION POS
		from USER_INDEXES i, USER_IND_COLUMNS c
		where 
		  i.TABLE_OWNER = '%1$s'
		  and i.UNIQUENESS = 'UNIQUE'
		  and i.TABLE_NAME not like 'BIN$%%'
		  and i.TABLE_NAME = c.TABLE_NAME
		  and i.INDEX_NAME = c.INDEX_NAME
		  and i.INDEX_NAME not in
		  	(Select CONSTRAINT_NAME 
		  	from user_constraints 
		  	where CONSTRAINT_TYPE = 'P'
			and STATUS = 'ENABLED'
			and TABLE_NAME not like 'BIN$%%'
			and OWNER = '%1$s'
		  	)
		union
		Select con.CONSTRAINT_NAME CNAME, con.TABLE_NAME TNAME, cc.COLUMN_NAME COLNAME, cc.POSITION POS
		from USER_CONSTRAINTS con, USER_CONS_COLUMNS cc
		where
		  con.CONSTRAINT_TYPE in ('U')
		  and con.OWNER = '%1$s'
		  and con.STATUS = 'ENABLED'
		  and con.TABLE_NAME not like 'BIN$%%'
		  and con.TABLE_NAME = cc.TABLE_NAME
		  and con.CONSTRAINT_NAME = cc.CONSTRAINT_NAME
		)
	)
) order by TYPEPOS, CNAME, TNAME, POS, COLNAME
        </constraintsQuery>
        <objectRenderers>
       		<name>Triggers</name>
        	<iconURL>/net/sf/jailer/ui/resource/triggers.png</iconURL>
			<itemDescription>
	        	<iconURL>/net/sf/jailer/ui/resource/trigger.png</iconURL>
				<textQuery>select 'Body', TRIGGER_BODY from ALL_TRIGGERS where table_owner = '%1$s'</textQuery>
			</itemDescription>
			<listQuery>select TRIGGER_NAME, TRIGGER_TYPE, TRIGGERING_EVENT, TABLE_NAME, COLUMN_NAME, REFERENCING_NAMES, WHEN_CLAUSE, STATUS, DESCRIPTION, ACTION_TYPE, CROSSEDITION, BEFORE_STATEMENT, BEFORE_ROW, AFTER_ROW, AFTER_STATEMENT, INSTEAD_OF_ROW, FIRE_ONCE, APPLY_SERVER_ONLY from ALL_TRIGGERS where table_owner = '%1$s'</listQuery>
		</objectRenderers>
        <objectRenderers>
       		<name>Sequences</name>
        	<iconURL>/net/sf/jailer/ui/resource/sequences.png</iconURL>
			<itemDescription>
	        	<iconURL>/net/sf/jailer/ui/resource/sequence.png</iconURL>
			</itemDescription>
			<listQuery>select SEQUENCE_NAME,SEQUENCE_OWNER,MIN_VALUE,MAX_VALUE,INCREMENT_BY,CYCLE_FLAG,ORDER_FLAG,CACHE_SIZE,LAST_NUMBER from ALL_SEQUENCES where SEQUENCE_OWNER = '%1$s'</listQuery>
		</objectRenderers>
    </dbms>

    <!-- for MS SQL Server -->
    <dbms>
        <id>MSSQL</id>
        <displayName>MS SQL Server</displayName>
        <urlPattern>jdbc:sqlserver.*|jdbc:inetdae.*|jdbc:JTurbo.*|jdbc:weblogic:mssqlserver.*|jdbc:jtds:sqlserver.*</urlPattern>
        <sqlDialect>
            <needsValuesKeywordForDeletes>false</needsValuesKeywordForDeletes>
            <supportsInClauseForDeletes>false</supportsInClauseForDeletes>
            <supportsMultiRowInserts>true</supportsMultiRowInserts>
            <upsertMode>DB2</upsertMode>
        </sqlDialect>
        <statisticRenovator>
            <scriptFileName>script/mssql/update_statistics.sql</scriptFileName>
        </statisticRenovator>
        <stringLiteralEscapeSequences>
            <entry>
                <key>'</key>
                <value>''</value>
            </entry>
            <entry>
                <key>\n</key>
                <value>' + char(10) + '</value>
            </entry>
            <entry>
                <key>\r</key>
                <value>' + char(13) + '</value>
            </entry>
        </stringLiteralEscapeSequences>
        <sqlLimitSuffix>TOP %s</sqlLimitSuffix>
        
        <!-- NOLOGGING, TABLESPACE-spec., etc. -->
        <tableProperties></tableProperties>

		<sessionTemporaryTableManager>
			<dmlTableReferencePrefix>#</dmlTableReferencePrefix>
			<ddlTableReferencePrefix>#</ddlTableReferencePrefix>
			<createTablePrefix>CREATE TABLE </createTablePrefix>
			<createTableSuffix></createTableSuffix>
			<createIndexPrefix>CREATE INDEX </createIndexPrefix>
			<createIndexSuffix></createIndexSuffix>
			<indexTablePrefix></indexTablePrefix>
			<dropTablePrefix>DROP TABLE </dropTablePrefix>
		</sessionTemporaryTableManager>
        
        <ncharPrefix>N</ncharPrefix>
        <exportBlocks>timestamp</exportBlocks>
        <exportBlocks>TIMESTAMP</exportBlocks>
        <typeReplacement>
            <entry>
                <key>timestamp</key>
                <value>datetime</value>
            </entry>
            <entry>
                <key>TIMESTAMP</key>
                <value>DATETIME</value>
            </entry>
        </typeReplacement>
        <identityInserts>true</identityInserts>
        <timestampPattern>'convert(datetime, '''yyyy-MM-dd'T'HH:mm:ss.SSS''', 126)'</timestampPattern>
        <emptyBLOBValue>0x</emptyBLOBValue>
        <emptyCLOBValue>''</emptyCLOBValue>
        <emptyNCLOBValue>N''</emptyNCLOBValue>
        <toBlob>0x%s</toBlob>
        <toClob>'%s'</toClob>
        <toNClob>N'%s'</toNClob>
        <embeddedLobSizeLimit>32000</embeddedLobSizeLimit>
        <binaryPattern>0x%s</binaryPattern>
        <avoidLeftJoin>false</avoidLeftJoin>
        <supportsSchemasInIndexDefinitions>false</supportsSchemasInIndexDefinitions>
        <useInlineViewsInDataBrowser>true</useInlineViewsInDataBrowser>
        <limitTransactionSize>
        	<limit>30000</limit>
        	<afterSelect>TOP(%1$s)</afterSelect>
        </limitTransactionSize>
        <estimatedRowCountQuery>
SELECT tbl.name, p.rows
FROM sys.tables AS tbl
INNER JOIN sys.indexes AS idx ON idx.object_id = tbl.object_id and idx.index_id &lt; 2
INNER JOIN sys.partitions AS p ON p.object_id=CAST(tbl.object_id AS int)
AND p.index_id=idx.index_id
WHERE SCHEMA_NAME(tbl.schema_id)='%s'
		</estimatedRowCountQuery>
		<defaultSchemaQuery>SELECT SCHEMA_NAME()</defaultSchemaQuery>
		<viewTextOrDDLQuery>SELECT VIEW_DEFINITION FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_SCHEMA = '%1$s' and TABLE_NAME = '%2$s'</viewTextOrDDLQuery>
        <virtualColumnsQuery>SELECT sysobjects.name AS TableName, syscolumns.name AS ColumnName FROM syscolumns JOIN sysobjects ON syscolumns.id = sysobjects.id AND sysobjects.xtype = 'U' WHERE syscolumns.iscomputed = 1</virtualColumnsQuery>
		<userDefinedColumnsQuery>SELECT distinct DOMAIN_NAME from INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '%s' AND DOMAIN_NAME is not null</userDefinedColumnsQuery>
<!-- 
		<importedKeysQuery>SELECT null, PKCU.TABLE_SCHEMA, PKCU.TABLE_NAME, PKCU.COLUMN_NAME, null, KCU.TABLE_SCHEMA, KCU.TABLE_NAME, KCU.COLUMN_NAME, KCU.ORDINAL_POSITION, null, null, RC.CONSTRAINT_NAME, RC.UNIQUE_CONSTRAINT_NAME, null FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS RC JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU ON KCU.CONSTRAINT_CATALOG = RC.CONSTRAINT_CATALOG AND KCU.CONSTRAINT_SCHEMA = RC.CONSTRAINT_SCHEMA AND KCU.CONSTRAINT_NAME = RC.CONSTRAINT_NAME AND KCU.TABLE_CATALOG = RC.CONSTRAINT_CATALOG JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE PKCU ON PKCU.CONSTRAINT_CATALOG = RC.UNIQUE_CONSTRAINT_CATALOG AND PKCU.CONSTRAINT_SCHEMA = RC.UNIQUE_CONSTRAINT_SCHEMA AND PKCU.CONSTRAINT_NAME = RC.UNIQUE_CONSTRAINT_NAME AND PKCU.TABLE_CATALOG = RC.UNIQUE_CONSTRAINT_CATALOG AND PKCU.ORDINAL_POSITION = KCU.ORDINAL_POSITION WHERE PKCU.TABLE_SCHEMA = '${SCHEMA}' ORDER BY KCU.ORDINAL_POSITION</importedKeysQuery>
        <primaryKeysQuery>SELECT null, KCU.TABLE_SCHEMA, KCU.TABLE_NAME, KCU.COLUMN_NAME, KCU.ORDINAL_POSITION, C.CONSTRAINT_NAME   FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS C   JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU     ON KCU.CONSTRAINT_CATALOG = C.CONSTRAINT_CATALOG        AND KCU.CONSTRAINT_SCHEMA = C.CONSTRAINT_SCHEMA   AND KCU.TABLE_NAME = C.TABLE_NAME    AND KCU.CONSTRAINT_NAME = C.CONSTRAINT_NAME   WHERE C.CONSTRAINT_TYPE = 'PRIMARY KEY'       AND  KCU.TABLE_SCHEMA = '${SCHEMA}'   ORDER BY KCU.ORDINAL_POSITION</primaryKeysQuery>
-->
        <nullableContraint>NULL</nullableContraint>
        <identifierQuoteString>"</identifierQuoteString>
        <explainPrepare>SET SHOWPLAN_ALL ON</explainPrepare>
        <explainQuery>%1$s</explainQuery>
        <explainCleanup>SET SHOWPLAN_ALL OFF</explainCleanup>
        <constraintsQuery>
Select CNAME, TNAME, COLNAME, CTYPE, DETAIL From
(
	Select KCU.CONSTRAINT_NAME CNAME, KCU.TABLE_NAME TNAME, KCU.COLUMN_NAME COLNAME, 'PK' CTYPE, null DETAIL, KCU.ORDINAL_POSITION POS, 1 TYPEPOS
    From 
        INFORMATION_SCHEMA.TABLE_CONSTRAINTS C
    join
        INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU
            ON KCU.CONSTRAINT_CATALOG = C.CONSTRAINT_CATALOG
            AND KCU.CONSTRAINT_SCHEMA = C.CONSTRAINT_SCHEMA
            AND KCU.TABLE_NAME = C.TABLE_NAME
            AND KCU.CONSTRAINT_NAME = C.CONSTRAINT_NAME
    where
        C.CONSTRAINT_TYPE = 'PRIMARY KEY'
        AND KCU.TABLE_SCHEMA = '%1$s'
union all
	Select C.CONSTRAINT_NAME CNAME, KCU.TABLE_NAME TNAME, KCU.COLUMN_NAME COLNAME, 'Unique' CTYPE, null DETAIL, KCU.ORDINAL_POSITION POS, 2 TYPEPOS
    From 
        INFORMATION_SCHEMA.TABLE_CONSTRAINTS C
    join
        INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU
            ON KCU.CONSTRAINT_CATALOG = C.CONSTRAINT_CATALOG
            AND KCU.CONSTRAINT_SCHEMA = C.CONSTRAINT_SCHEMA
            AND KCU.TABLE_NAME = C.TABLE_NAME
            AND KCU.CONSTRAINT_NAME = C.CONSTRAINT_NAME
    where
        C.CONSTRAINT_TYPE = 'UNIQUE'
        AND KCU.TABLE_SCHEMA = '%1$s'
	union all
	Select C.CONSTRAINT_NAME CNAME, C.TABLE_NAME TNAME, CU.COLUMN_NAME COLNAME, 'Check' CTYPE, CHECK_CLAUSE DETAIL, 1 POS, 3 TYPEPOS
	From 
		INFORMATION_SCHEMA.CHECK_CONSTRAINTS CC
	join
		INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CU
	    on CU.CONSTRAINT_CATALOG = CC.CONSTRAINT_CATALOG
	    and CU.CONSTRAINT_SCHEMA = CC.CONSTRAINT_SCHEMA
	    and CU.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
	join
		INFORMATION_SCHEMA.TABLE_CONSTRAINTS C
	    on C.CONSTRAINT_CATALOG = CC.CONSTRAINT_CATALOG
	    and C.CONSTRAINT_SCHEMA = CC.CONSTRAINT_SCHEMA
	    and C.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		and C.CONSTRAINT_TYPE = 'CHECK'
		and C.TABLE_SCHEMA = '%1$s'
) pk order by TYPEPOS, CNAME, TNAME, POS, COLNAME
		</constraintsQuery>
    </dbms>
    
    <!-- for MySQL -->
    <dbms>
        <id>MySQL</id>
        <displayName>MySQL</displayName>
        <urlPattern>jdbc:mysql.*|jdbc:mariadb.*</urlPattern>
        <sqlDialect>
            <needsValuesKeywordForDeletes>false</needsValuesKeywordForDeletes>
            <supportsInClauseForDeletes>true</supportsInClauseForDeletes>
            <supportsMultiRowInserts>true</supportsMultiRowInserts>
            <upsertMode>FROM_DUAL</upsertMode>
        </sqlDialect>
        <jdbcProperties>
            <entry>
                <key>noDatetimeStringSync</key>
                <value>true</value>
            </entry>
        </jdbcProperties>
        <statisticRenovator>
            <scriptFileName>script/mysql/update_statistics.sql</scriptFileName>
        </statisticRenovator>
        <typeReplacement>
            <entry>
                <key>TINYINT</key>
                <value>INT</value>
            </entry>
            <entry>
                <key>SMALLINT</key>
                <value>INT</value>
            </entry>
            <entry>
                <key>MEDIUMINT</key>
                <value>INT</value>
            </entry>
            <entry>
                <key>INT</key>
                <value>BIGINT</value>
            </entry>
            <entry>
                <key>INTEGER</key>
                <value>BIGINT</value>
            </entry>
            <entry>
                <key>tinyint</key>
                <value>int</value>
            </entry>
            <entry>
                <key>smallint</key>
                <value>int</value>
            </entry>
            <entry>
                <key>mediumint</key>
                <value>int</value>
            </entry>
            <entry>
                <key>int</key>
                <value>bigint</value>
            </entry>
            <entry>
                <key>integer</key>
                <value>bigint</value>
            </entry>
        </typeReplacement>
        <stringLiteralEscapeSequences>
            <entry>
                <key>\0</key>
                <value>\0</value>
            </entry>
            <entry>
                <key>'</key>
                <value>\'</value>
            </entry>
            <entry>
                <key>"</key>
                <value>\"</value>
            </entry>
            <entry>
                <key>\n</key>
                <value>\n</value>
            </entry>
            <entry>
                <key>\r</key>
                <value>\r</value>
            </entry>
            <entry>
                <key>\t</key>
                <value>\t</value>
            </entry>
            <entry>
                <key>\b</key>
                <value>\b</value>
            </entry>
            <entry>
                <key>\26</key>
                <value>\Z</value>
            </entry>
            <entry>
                <key>\\</key>
                <value>\\</value>
            </entry>
        </stringLiteralEscapeSequences>
        <sqlLimitSuffix>LIMIT 0, %s</sqlLimitSuffix>
        
        <!-- NOLOGGING, TABLESPACE-spec., etc. -->
        <tableProperties></tableProperties>

        <limitTransactionSize>
        	<limit>30000</limit>
        	<statementSuffix>limit %1$s</statementSuffix>
        </limitTransactionSize>

        <identityInserts>false</identityInserts>
        <emptyBLOBValue>BINARY ''</emptyBLOBValue>
        <emptyCLOBValue>''</emptyCLOBValue>
        <emptyNCLOBValue>''</emptyNCLOBValue>
        <toBlob>0x%s</toBlob>
        <toClob>'%s'</toClob>
        <toNClob>'%s'</toNClob>
        <embeddedLobSizeLimit>32000</embeddedLobSizeLimit>
        <binaryPattern>x'%s'</binaryPattern>
        <avoidLeftJoin>false</avoidLeftJoin>
        <useInlineViewsInDataBrowser>true</useInlineViewsInDataBrowser>
        <defaultSchemaQuery>Select DATABASE()</defaultSchemaQuery>
		<estimatedRowCountQuery>select TABLE_NAME, CARDINALITY from INFORMATION_SCHEMA.STATISTICS where TABLE_SCHEMA = '%s'</estimatedRowCountQuery>
		<viewTextOrDDLQuery>SELECT VIEW_DEFINITION FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_SCHEMA = '%1$s' and TABLE_NAME = '%2$s'</viewTextOrDDLQuery>
        
		<virtualColumnsQuery>SELECT TABLE_NAME, COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '${SCHEMA}' AND EXTRA LIKE '%VIRTUAL%'</virtualColumnsQuery>
<!--
        <importedKeysQuery>SELECT PKCU.TABLE_SCHEMA, null, PKCU.TABLE_NAME, PKCU.COLUMN_NAME, KCU.TABLE_SCHEMA, null, KCU.TABLE_NAME, KCU.COLUMN_NAME, KCU.ORDINAL_POSITION,        null, null, RC.CONSTRAINT_NAME, RC.UNIQUE_CONSTRAINT_NAME, null  FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS RC  JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU    ON KCU.CONSTRAINT_CATALOG = RC.CONSTRAINT_CATALOG        AND KCU.CONSTRAINT_SCHEMA = RC.CONSTRAINT_SCHEMA       AND KCU.CONSTRAINT_NAME = RC.CONSTRAINT_NAME  JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE PKCU    ON PKCU.CONSTRAINT_CATALOG = RC.UNIQUE_CONSTRAINT_CATALOG        AND PKCU.CONSTRAINT_SCHEMA = RC.UNIQUE_CONSTRAINT_SCHEMA       AND PKCU.CONSTRAINT_NAME = RC.UNIQUE_CONSTRAINT_NAME AND PKCU.TABLE_NAME = RC.REFERENCED_TABLE_NAME AND PKCU.ORDINAL_POSITION = KCU.ORDINAL_POSITION  WHERE PKCU.TABLE_SCHEMA = '${SCHEMA}'  ORDER BY KCU.ORDINAL_POSITION</importedKeysQuery>
        <primaryKeysQuery>SELECT null, KCU.TABLE_SCHEMA, KCU.TABLE_NAME, KCU.COLUMN_NAME, KCU.ORDINAL_POSITION, C.CONSTRAINT_NAME   FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS C   JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU     ON KCU.CONSTRAINT_CATALOG = C.CONSTRAINT_CATALOG        AND KCU.CONSTRAINT_SCHEMA = C.CONSTRAINT_SCHEMA   AND KCU.TABLE_NAME = C.TABLE_NAME    AND KCU.CONSTRAINT_NAME = C.CONSTRAINT_NAME   WHERE C.CONSTRAINT_TYPE = 'PRIMARY KEY'       AND  KCU.TABLE_SCHEMA = '${SCHEMA}'   ORDER BY KCU.ORDINAL_POSITION</primaryKeysQuery>
-->
        <nullableContraint>NULL</nullableContraint>
        <identifierQuoteString>`</identifierQuoteString>
        <ddlQuery>SHOW CREATE ${type} `${schema}`.`${table}`</ddlQuery>
        <explainPrepare></explainPrepare>
        <explainQuery>explain %1$s</explainQuery>
        <explainCleanup></explainCleanup>
        <functionSourceQuery>SHOW CREATE FUNCTION %1$s.%2$s</functionSourceQuery>
        <procedureSourceQuery>SHOW CREATE PROCEDURE %1$s.%2$s</procedureSourceQuery>
        <constraintsQuery>
Select CNAME, TNAME, COLNAME, CTYPE, DETAIL From
(
	Select concat('pk_', KCU.TABLE_NAME) CNAME, KCU.TABLE_NAME TNAME, KCU.COLUMN_NAME COLNAME, 'PK' CTYPE, null DETAIL, KCU.ORDINAL_POSITION POS, 1 TYPEPOS
    From 
        INFORMATION_SCHEMA.TABLE_CONSTRAINTS C
    join
        INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU
            ON KCU.CONSTRAINT_CATALOG = C.CONSTRAINT_CATALOG
            AND KCU.CONSTRAINT_SCHEMA = C.CONSTRAINT_SCHEMA
            AND KCU.TABLE_NAME = C.TABLE_NAME
            AND KCU.CONSTRAINT_NAME = C.CONSTRAINT_NAME
    where
        C.CONSTRAINT_TYPE = 'PRIMARY KEY'
        AND KCU.TABLE_SCHEMA = '%1$s'
union all
	Select C.CONSTRAINT_NAME CNAME, KCU.TABLE_NAME TNAME, KCU.COLUMN_NAME COLNAME, 'Unique' CTYPE, null DETAIL, KCU.ORDINAL_POSITION POS, 2 TYPEPOS
    From 
        INFORMATION_SCHEMA.TABLE_CONSTRAINTS C
    join
        INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU
            ON KCU.CONSTRAINT_CATALOG = C.CONSTRAINT_CATALOG
            AND KCU.CONSTRAINT_SCHEMA = C.CONSTRAINT_SCHEMA
            AND KCU.TABLE_NAME = C.TABLE_NAME
            AND KCU.CONSTRAINT_NAME = C.CONSTRAINT_NAME
    where
        C.CONSTRAINT_TYPE = 'UNIQUE'
        AND KCU.TABLE_SCHEMA = '%1$s'
) pk order by TYPEPOS, CNAME, TNAME, POS, COLNAME
		</constraintsQuery>
        <objectRenderers>
       		<name>Triggers</name>
        	<iconURL>/net/sf/jailer/ui/resource/triggers.png</iconURL>
			<itemDescription>
	        	<iconURL>/net/sf/jailer/ui/resource/trigger.png</iconURL>
			</itemDescription>
			<listQuery>SHOW TRIGGERS FROM %1$s</listQuery>
		</objectRenderers>
    </dbms>

    <!-- for DB2 LUW -->
    <dbms>
        <id>DB2</id>
        <displayName>DB2 LUW</displayName>
        <urlPattern>jdbc:db2.*</urlPattern>
        <testQuery>Select A, B, C from (values (1, '2', 3), (4, '5', 6)) E(A, B, C)</testQuery>
        <sqlDialect>
            <needsValuesKeywordForDeletes>true</needsValuesKeywordForDeletes>
            <supportsInClauseForDeletes>true</supportsInClauseForDeletes>
            <supportsMultiRowInserts>true</supportsMultiRowInserts>
            <upsertMode>DB2</upsertMode>
        </sqlDialect>
        <statisticRenovator>
            <scriptFileName>script/db2/update_statistics.sql</scriptFileName>
        </statisticRenovator>
        <typeReplacement>
            <entry>
                <key>graphic</key>
                <value>varchar</value>
            </entry>
            <entry>
                <key>GRAPHIC</key>
                <value>VARCHAR</value>
            </entry>
        </typeReplacement>
        <stringLiteralEscapeSequences>
            <entry>
                <key>'</key>
                <value>''</value>
            </entry>
            <entry>
                <key>\n</key>
                <value>' || chr(10) || '</value>
            </entry>
            <entry>
                <key>\r</key>
                <value>' || chr(13) || '</value>
            </entry>
        </stringLiteralEscapeSequences>
        <sqlLimitSuffix>fetch first %s rows only</sqlLimitSuffix>
        <tableProperties>NOT LOGGED INITIALLY</tableProperties>
        <sessionTemporaryTableManager>
            <createIndexPrefix>CREATE INDEX SESSION.</createIndexPrefix>
            <createIndexSuffix></createIndexSuffix>
            <createTablePrefix>DECLARE GLOBAL TEMPORARY TABLE </createTablePrefix>
            <createTableSuffix>ON COMMIT PRESERVE ROWS NOT LOGGED</createTableSuffix>
            <dropTablePrefix>DROP TABLE SESSION.</dropTablePrefix>
            <indexTablePrefix>SESSION.</indexTablePrefix>
        </sessionTemporaryTableManager>
        <identityInserts>false</identityInserts>
        <emptyBLOBValue>blob('')</emptyBLOBValue>
        <emptyCLOBValue>clob('')</emptyCLOBValue>
        <emptyNCLOBValue>nclob('')</emptyNCLOBValue>
        <toBlob>blob('%s')</toBlob>
        <toClob>clob('%s')</toClob>
        <toNClob>nclob('%s')</toNClob>
        <embeddedLobSizeLimit>32000</embeddedLobSizeLimit>
        <binaryPattern>x'%s'</binaryPattern>
        <avoidLeftJoin>false</avoidLeftJoin>
        <useInlineViewsInDataBrowser>true</useInlineViewsInDataBrowser>
        <estimatedRowCountQuery>SELECT TABNAME, CARD FROM SYSSTAT.TABLES WHERE TABSCHEMA = '%s'</estimatedRowCountQuery>
        <viewTextOrDDLQuery>SELECT TEXT FROM SYSCAT.VIEWS WHERE VIEWSCHEMA = '%1$s' and VIEWNAME = '%2$s'</viewTextOrDDLQuery> 
        <virtualColumnsQuery>SELECT TABNAME, COLNAME from syscat.columns WHERE TABSCHEMA='${SCHEMA}' AND GENERATED='A'</virtualColumnsQuery>
        <importedKeysQuery> SELECT null, REF.REFTABSCHEMA, REF.REFTABNAME, PKCOL.COLNAME,        null, REF.TABSCHEMA, REF.TABNAME, FKCOL.COLNAME, FKCOL.COLSEQ,        null, null, REF.CONSTNAME, REF.REFKEYNAME, null FROM syscat.references REF, syscat.keycoluse PKCOL, syscat.keycoluse FKCOL WHERE REF.CONSTNAME = FKCOL.CONSTNAME   AND REF.TABSCHEMA = FKCOL.TABSCHEMA   AND REF.TABNAME = FKCOL.TABNAME   AND REF.REFKEYNAME = PKCOL.CONSTNAME   AND REF.REFTABSCHEMA = PKCOL.TABSCHEMA   AND REF.REFTABNAME = PKCOL.TABNAME   AND FKCOL.COLSEQ = PKCOL.COLSEQ   AND REF.REFTABSCHEMA = '${SCHEMA}'   ORDER BY FKCOL.COLSEQ</importedKeysQuery>
        <primaryKeysQuery>   SELECT null, CONST.TABSCHEMA, CONST.TABNAME, PKCOL.COLNAME, PKCOL.COLSEQ, CONST.CONSTNAME FROM syscat.tabconst CONST, syscat.keycoluse PKCOL WHERE CONST.CONSTNAME = PKCOL.CONSTNAME   AND CONST.TABSCHEMA = PKCOL.TABSCHEMA   AND CONST.TABNAME = PKCOL.TABNAME   AND CONST.TYPE = 'P'   AND CONST.TABSCHEMA = '${SCHEMA}'   ORDER BY PKCOL.COLSEQ</primaryKeysQuery>
        <identifierQuoteString>"</identifierQuoteString>
        <procedureDetailNeedsSpecificName>true</procedureDetailNeedsSpecificName>
        <functionSourceQuery>SELECT 'Source', cast(ROUTINE_DEFINITION as varchar) FROM SYSIBM.ROUTINES where ROUTINE_SCHEMA = '%1$s' and SPECIFIC_NAME = '%2$s' and ROUTINE_DEFINITION is not null</functionSourceQuery>
        <procedureSourceQuery>SELECT 'Source', cast(ROUTINE_DEFINITION as varchar) FROM SYSIBM.ROUTINES where ROUTINE_SCHEMA = '%1$s' and SPECIFIC_NAME = '%2$s' and ROUTINE_DEFINITION is not null</procedureSourceQuery>
        <constraintsQuery>
Select CNAME, TNAME, COLNAME, CTYPE, DETAIL From
(
	Select CONST.CONSTNAME CNAME, CONST.TABNAME TNAME, PKCOL.COLNAME COLNAME, 'PK' CTYPE, null DETAIL, PKCOL.COLSEQ POS, 1 TYPEPOS
	From 
	    syscat.tabconst CONST,
        syscat.keycoluse PKCOL
    WHERE
        CONST.CONSTNAME = PKCOL.CONSTNAME
        AND CONST.TABSCHEMA = PKCOL.TABSCHEMA
        AND CONST.TABNAME = PKCOL.TABNAME
        AND CONST.TYPE = 'P'
        AND CONST.TABSCHEMA = '%1$s'
	union all
	Select I.INDNAME CNAME, I.TABNAME TNAME, u.COLNAME COLNAME, 'Unique' CTYPE, null DETAIL, u.COLSEQ POS, 2 TYPEPOS
	from
		syscat.indexes i
		join syscat.indexcoluse u
			on i.INDSCHEMA = u.INDSCHEMA
			and i.INDNAME = u.INDNAME
		where
			i.UNIQUERULE = 'U'
			and i.TABSCHEMA = '%1$s'
	union all
		Select C.CONSTNAME CNAME, C.TABNAME TNAME, ' ' COLNAME, 'Check' CTYPE, cast(TEXT as varchar) DETAIL, 1 POS, 3 TYPEPOS
		From 
			syscat.checks C
		where
			C.TYPE = 'C'
			AND C.TABSCHEMA = '%1$s'
) pk order by TYPEPOS, CNAME, TNAME, POS, COLNAME
		</constraintsQuery>
        <objectRenderers>
       		<name>Triggers</name>
        	<iconURL>/net/sf/jailer/ui/resource/triggers.png</iconURL>
			<itemDescription>
	        	<iconURL>/net/sf/jailer/ui/resource/trigger.png</iconURL>
			</itemDescription>
			<listQuery>SELECT TRIGNAME,OWNER,OWNERTYPE,TABSCHEMA,TABNAME,TRIGTIME,TRIGEVENT,GRANULARITY,VALID,CREATE_TIME,QUALIFIER,cast(FUNC_PATH as VARCHAR) FUNC_PATH,cast(TEXT as VARCHAR) TEXT,LAST_REGEN_TIME,REMARKS,PRECOMPILE_OPTIONS,COMPILE_OPTIONS FROM SYSCAT.TRIGGERS WHERE TRIGSCHEMA = '%1$s'</listQuery>
		</objectRenderers>
        <objectRenderers>
       		<name>Sequences</name>
        	<iconURL>/net/sf/jailer/ui/resource/sequences.png</iconURL>
			<itemDescription>
	        	<iconURL>/net/sf/jailer/ui/resource/sequence.png</iconURL>
			</itemDescription>
			<listQuery>select SEQNAME, SEQSCHEMA, DEFINER, DEFINERTYPE, OWNER, OWNERTYPE, SEQID, SEQTYPE, BASE_SEQSCHEMA, BASE_SEQNAME, INCREMENT, START, MAXVALUE, MINVALUE, NEXTCACHEFIRSTVALUE, CYCLE, CACHE, ORDER, DATATYPEID, SOURCETYPEID, CREATE_TIME, ALTER_TIME, PRECISION, ORIGIN, REMARKS from SYSCAT.SEQUENCES where OWNER = '%1$s'</listQuery>
		</objectRenderers>
    </dbms>

    <!-- for DB2 z/OS -->
    <dbms>
        <id>DB2_ZOS</id>
        <displayName>DB2 z/OS</displayName>
        <urlPattern>jdbc:db2.*</urlPattern>
        <sqlDialect>
            <needsValuesKeywordForDeletes>true</needsValuesKeywordForDeletes>
            <supportsInClauseForDeletes>false</supportsInClauseForDeletes>
            <supportsMultiRowInserts>true</supportsMultiRowInserts>
            <upsertMode>FROM_SYSDUMMY1</upsertMode>
        </sqlDialect>
        <statisticRenovator>
            <scriptFileName>script/db2/update_statistics.sql</scriptFileName>
        </statisticRenovator>
        <typeReplacement>
            <entry>
                <key>graphic</key>
                <value>varchar</value>
            </entry>
            <entry>
                <key>GRAPHIC</key>
                <value>VARCHAR</value>
            </entry>
        </typeReplacement>
        <stringLiteralEscapeSequences>
            <entry>
                <key>'</key>
                <value>''</value>
            </entry>
            <entry>
                <key>\n</key>
                <value>' || chr(10) || '</value>
            </entry>
            <entry>
                <key>\r</key>
                <value>' || chr(13) || '</value>
            </entry>
        </stringLiteralEscapeSequences>
        <sqlLimitSuffix>fetch first %s rows only</sqlLimitSuffix>
        <tableProperties>NOT LOGGED INITIALLY</tableProperties>
        <sessionTemporaryTableManager>
            <createIndexPrefix>CREATE INDEX SESSION.</createIndexPrefix>
            <createIndexSuffix></createIndexSuffix>
            <createTablePrefix>DECLARE GLOBAL TEMPORARY TABLE </createTablePrefix>
            <createTableSuffix>ON COMMIT PRESERVE ROWS NOT LOGGED</createTableSuffix>
            <dropTablePrefix>DROP TABLE SESSION.</dropTablePrefix>
            <indexTablePrefix>SESSION.</indexTablePrefix>
        </sessionTemporaryTableManager>
        <identityInserts>false</identityInserts>
        <emptyBLOBValue>blob('')</emptyBLOBValue>
        <emptyCLOBValue>clob('')</emptyCLOBValue>
        <emptyNCLOBValue>nclob('')</emptyNCLOBValue>
        <toBlob>blob('%s')</toBlob>
        <toClob>clob('%s')</toClob>
        <toNClob>nclob('%s')</toNClob>
        <embeddedLobSizeLimit>32000</embeddedLobSizeLimit>
        <binaryPattern>x'%s'</binaryPattern>
        <avoidLeftJoin>false</avoidLeftJoin>
        <useInlineViewsInDataBrowser>true</useInlineViewsInDataBrowser>
        <viewTextOrDDLQuery>SELECT TEXT FROM SYSCAT.VIEWS WHERE VIEWSCHEMA = '%1$s' and VIEWNAME = '%2$s'</viewTextOrDDLQuery> 
        <estimatedRowCountQuery>SELECT TABNAME, CARD FROM SYSSTAT.TABLES WHERE TABSCHEMA = '%s'</estimatedRowCountQuery>
        <virtualColumnsQuery>SELECT TABNAME, COLNAME from syscat.columns WHERE TABSCHEMA='${SCHEMA}' AND GENERATED='A'</virtualColumnsQuery>
        <importedKeysQuery>SELECT null, REF.REFTABSCHEMA, REF.REFTABNAME, PKCOL.COLNAME, null, REF.TABSCHEMA, REF.TABNAME, FKCOL.COLNAME, FKCOL.COLSEQ, null, null, REF.CONSTNAME, REF.REFKEYNAME, null FROM syscat.references REF, syscat.keycoluse PKCOL, syscat.keycoluse FKCOL WHERE REF.CONSTNAME = FKCOL.CONSTNAME   AND REF.TABSCHEMA = FKCOL.TABSCHEMA   AND REF.TABNAME = FKCOL.TABNAME   AND REF.REFKEYNAME = PKCOL.CONSTNAME   AND REF.REFTABSCHEMA = PKCOL.TABSCHEMA   AND REF.REFTABNAME = PKCOL.TABNAME   AND FKCOL.COLSEQ = PKCOL.COLSEQ   AND REF.REFTABSCHEMA = '${SCHEMA}' ORDER BY FKCOL.COLSEQ</importedKeysQuery>
        <primaryKeysQuery>SELECT null, CONST.TABSCHEMA, CONST.TABNAME, PKCOL.COLNAME, PKCOL.COLSEQ, CONST.CONSTNAME FROM syscat.tabconst CONST, syscat.keycoluse PKCOL WHERE CONST.CONSTNAME = PKCOL.CONSTNAME   AND CONST.TABSCHEMA = PKCOL.TABSCHEMA   AND CONST.TABNAME = PKCOL.TABNAME   AND CONST.TYPE = 'P'   AND CONST.TABSCHEMA = '${SCHEMA}'   ORDER BY PKCOL.COLSEQ</primaryKeysQuery>
        <identifierQuoteString>"</identifierQuoteString>
    </dbms>

    <!-- for Informix -->
    <dbms>
        <id>INFORMIX</id>
        <displayName>Informix</displayName>
        <urlPattern>jdbc:informix.*</urlPattern>
        <sqlDialect>
            <needsValuesKeywordForDeletes>true</needsValuesKeywordForDeletes>
            <supportsInClauseForDeletes>true</supportsInClauseForDeletes>
            <supportsMultiRowInserts>true</supportsMultiRowInserts>
            <upsertMode>DB2</upsertMode>
        </sqlDialect>
        <statisticRenovator>
            <scriptFileName>script/informix/update_statistics.sql</scriptFileName>
        </statisticRenovator>
        <typeReplacement>
            <entry>
                <key>datetime</key>
                <value>datetime year to fraction</value>
            </entry>
            <entry>
                <key>serial</key>
                <value>int</value>
            </entry>
            <entry>
                <key>serial8</key>
                <value>int8</value>
            </entry>
            <entry>
                <key>bigserial</key>
                <value>bigint</value>
            </entry>
        </typeReplacement>
        <sqlLimitSuffix>FIRST %s</sqlLimitSuffix>
        <varcharLengthLimit>255</varcharLengthLimit>
        <tableProperties></tableProperties>
        <sessionTemporaryTableManager>
            <createIndexPrefix>CREATE INDEX </createIndexPrefix>
            <createIndexSuffix></createIndexSuffix>
            <createTablePrefix>CREATE TEMP TABLE </createTablePrefix>
            <createTableSuffix> WITH NO LOG</createTableSuffix>
            <dropTablePrefix>DROP TABLE </dropTablePrefix>
            <indexTablePrefix></indexTablePrefix>
        </sessionTemporaryTableManager>
        <identityInserts>false</identityInserts>
        <timestampPattern>'cast('''yyyy-MM-dd HH.mm.ss'.${NANO}'' as datetime year to fraction)'</timestampPattern>
        <embeddedLobSizeLimit>3980</embeddedLobSizeLimit>
        <binaryPattern>x'%s'</binaryPattern>
        <avoidLeftJoin>false</avoidLeftJoin>
        <useInlineViewsInDataBrowser>true</useInlineViewsInDataBrowser>
        <identifierQuoteString>"</identifierQuoteString>
    </dbms>
    
    <!-- for PostgreSQL -->
    <dbms>
        <id>POSTGRESQL</id>
        <displayName>PostgreSQL</displayName>
        <urlPattern>jdbc:postgres.*|jdbc:redshift.*</urlPattern>
        <sqlDialect>
            <needsValuesKeywordForDeletes>true</needsValuesKeywordForDeletes>
            <supportsInClauseForDeletes>true</supportsInClauseForDeletes>
            <supportsMultiRowInserts>true</supportsMultiRowInserts>
            <upsertMode>DB2</upsertMode>
        </sqlDialect>
        <statisticRenovator>
            <scriptFileName>script/postgres/update_statistics.sql</scriptFileName>
        </statisticRenovator>
        <typeReplacement>
            <entry>
                <key>DOUBLE</key>
                <value>DOUBLE PRECISION</value>
            </entry>
            <entry>
                <key>double</key>
                <value>double precision</value>
            </entry>
            <entry>
                <key>bigserial</key>
                <value>int8</value>
            </entry>
            <entry>
                <key>serial8</key>
                <value>int8</value>
            </entry>
            <entry>
                <key>serial</key>
                <value>int4</value>
            </entry>
            <entry>
                <key>serial4</key>
                <value>int4</value>
            </entry>
            <entry>
                <key>NVARCHAR</key>
                <value>VARCHAR</value>
            </entry>
            <entry>
                <key>nvarchar</key>
                <value>varchar</value>
            </entry>
        </typeReplacement>
        <sqlLimitSuffix>LIMIT %s</sqlLimitSuffix>
        <fetchSize>1000</fetchSize>

        <!-- NOLOGGING, TABLESPACE-spec., etc. -->
        <tableProperties></tableProperties>
        
        <sessionTemporaryTableManager>
            <createIndexPrefix>CREATE INDEX </createIndexPrefix>
            <createIndexSuffix></createIndexSuffix>
            <createTablePrefix>CREATE TEMPORARY TABLE </createTablePrefix>
            <createTableSuffix></createTableSuffix>
            <dropTablePrefix>-- DROP TABLE </dropTablePrefix>
            <indexTablePrefix></indexTablePrefix>
        </sessionTemporaryTableManager>
        <identityInserts>false</identityInserts>
        <datePattern>''yyyy-MM-dd'''::date'</datePattern>
        <timestampPattern>'to_timestamp('''yyyy-MM-dd HH.mm.ss'.${NANO}'', ''YYYY-MM-DD HH24.MI.SS.US'')'</timestampPattern>
        <embeddedLobSizeLimit>3980</embeddedLobSizeLimit>
        <binaryPattern>E'\\x%s'</binaryPattern>
        <avoidLeftJoin>false</avoidLeftJoin>
        <supportsSchemasInIndexDefinitions>false</supportsSchemasInIndexDefinitions>
        <useInlineViewsInDataBrowser>true</useInlineViewsInDataBrowser>
        <identifierQuoteString>"</identifierQuoteString>
		<viewTextOrDDLQuery>SELECT VIEW_DEFINITION FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_SCHEMA = '%1$s' and TABLE_NAME = '%2$s'</viewTextOrDDLQuery>
		<estimatedRowCountQuery>
SELECT c.relname, c.reltuples::bigint AS estimate
FROM   pg_class c
JOIN   pg_namespace n ON n.oid = c.relnamespace
WHERE  n.nspname = '%s'
		</estimatedRowCountQuery>
        <explainPrepare></explainPrepare>
        <explainQuery>explain %1$s</explainQuery>
        <explainCleanup></explainCleanup>
        <functionSourceQuery>
SELECT 'Function', p.proname || '(' || pg_catalog.pg_get_function_arguments(p.oid) || ') RETURNS ' ||  pg_catalog.pg_get_function_result(p.oid)
FROM pg_catalog.pg_proc p
     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace
WHERE p.proname = '%2$s' AND n.nspname = '%1$s'
        </functionSourceQuery>
        <constraintsQuery>
Select CNAME, TNAME, COLNAME, CTYPE, DETAIL From
(
	Select KCU.CONSTRAINT_NAME CNAME, KCU.TABLE_NAME TNAME, KCU.COLUMN_NAME COLNAME, 'PK' CTYPE, null DETAIL, KCU.ORDINAL_POSITION POS, 1 TYPEPOS
    From 
        INFORMATION_SCHEMA.TABLE_CONSTRAINTS C
    join
        INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU
            ON KCU.CONSTRAINT_CATALOG = C.CONSTRAINT_CATALOG
            AND KCU.CONSTRAINT_SCHEMA = C.CONSTRAINT_SCHEMA
            AND KCU.TABLE_NAME = C.TABLE_NAME
            AND KCU.CONSTRAINT_NAME = C.CONSTRAINT_NAME
    where
        C.CONSTRAINT_TYPE = 'PRIMARY KEY'
        AND KCU.TABLE_SCHEMA = '%1$s'
union all
	Select C.CONSTRAINT_NAME CNAME, KCU.TABLE_NAME TNAME, KCU.COLUMN_NAME COLNAME, 'Unique' CTYPE, null DETAIL, KCU.ORDINAL_POSITION POS, 2 TYPEPOS
    From 
        INFORMATION_SCHEMA.TABLE_CONSTRAINTS C
    join
        INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU
            ON KCU.CONSTRAINT_CATALOG = C.CONSTRAINT_CATALOG
            AND KCU.CONSTRAINT_SCHEMA = C.CONSTRAINT_SCHEMA
            AND KCU.TABLE_NAME = C.TABLE_NAME
            AND KCU.CONSTRAINT_NAME = C.CONSTRAINT_NAME
    where
        C.CONSTRAINT_TYPE = 'UNIQUE'
        AND KCU.TABLE_SCHEMA = '%1$s'
	union all
	Select C.CONSTRAINT_NAME CNAME, C.TABLE_NAME TNAME, CU.COLUMN_NAME COLNAME, 'Check' CTYPE, CHECK_CLAUSE DETAIL, 1 POS, 3 TYPEPOS
	From 
		INFORMATION_SCHEMA.CHECK_CONSTRAINTS CC
	join
		INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CU
	    on CU.CONSTRAINT_CATALOG = CC.CONSTRAINT_CATALOG
	    and CU.CONSTRAINT_SCHEMA = CC.CONSTRAINT_SCHEMA
	    and CU.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
	join
		INFORMATION_SCHEMA.TABLE_CONSTRAINTS C
	    on C.CONSTRAINT_CATALOG = CC.CONSTRAINT_CATALOG
	    and C.CONSTRAINT_SCHEMA = CC.CONSTRAINT_SCHEMA
	    and C.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		and C.CONSTRAINT_TYPE = 'CHECK'
		and C.TABLE_SCHEMA = '%1$s'
) pk order by TYPEPOS, CNAME, TNAME, POS, COLNAME
		</constraintsQuery>
        <objectRenderers>
       		<name>Triggers</name>
        	<iconURL>/net/sf/jailer/ui/resource/triggers.png</iconURL>
			<itemDescription>
	        	<iconURL>/net/sf/jailer/ui/resource/trigger.png</iconURL>
			</itemDescription>
			<listQuery>select trigger_name, event_manipulation,event_object_catalog,event_object_schema,event_object_table,action_order,action_condition,action_statement,action_orientation,action_timing,action_reference_old_table,action_reference_new_table,action_reference_old_row,action_reference_new_row,created FROM information_schema.triggers where trigger_schema = '%1$s'</listQuery>
		</objectRenderers>
        <objectRenderers>
       		<name>Sequences</name>
        	<iconURL>/net/sf/jailer/ui/resource/sequences.png</iconURL>
			<itemDescription>
	        	<iconURL>/net/sf/jailer/ui/resource/sequence.png</iconURL>
			</itemDescription>
			<listQuery>select sequence_name, sequence_schema, sequence_catalog, data_type, numeric_precision, numeric_precision_radix, numeric_scale, start_value, minimum_value, maximum_value, increment, cycle_option from information_schema.sequences where sequence_schema = '%1$s'</listQuery>
		</objectRenderers>
    </dbms>
    
    <!-- for Cloudscape -->
    <dbms>
        <id>CLOADSCAPE</id>
        <displayName>Cloudscape</displayName>
        <urlPattern>jdbc:cloudscape.*</urlPattern>
        <sqlDialect>
            <needsValuesKeywordForDeletes>false</needsValuesKeywordForDeletes>
            <supportsInClauseForDeletes>false</supportsInClauseForDeletes>
            <supportsMultiRowInserts>false</supportsMultiRowInserts>
            <upsertMode>FROM_JL_DUAL</upsertMode>
        </sqlDialect>
        <statisticRenovator>
            <scriptFileName>script/cloudscape/update_statistics.sql</scriptFileName>
        </statisticRenovator>
        
        <!-- NOLOGGING, TABLESPACE-spec., etc. -->
        <tableProperties></tableProperties>
        
        <identityInserts>false</identityInserts>
        <embeddedLobSizeLimit>3980</embeddedLobSizeLimit>
        <binaryPattern>x'%s'</binaryPattern>
        <avoidLeftJoin>false</avoidLeftJoin>
        <useInlineViewsInDataBrowser>true</useInlineViewsInDataBrowser>
        <identifierQuoteString>"</identifierQuoteString>
    </dbms>
    
    <!-- for Firebird -->
    <dbms>
        <id>FIREBIRD</id>
        <displayName>Firebird</displayName>
        <urlPattern>jdbc:firebirdsql.*</urlPattern>
        <sqlDialect>
            <needsValuesKeywordForDeletes>false</needsValuesKeywordForDeletes>
            <supportsInClauseForDeletes>false</supportsInClauseForDeletes>
            <supportsMultiRowInserts>false</supportsMultiRowInserts>
            <upsertMode>FROM_JL_DUAL</upsertMode>
        </sqlDialect>
        <statisticRenovator>
            <scriptFileName>script/firebird/update_statistics.sql</scriptFileName>
        </statisticRenovator>
        <typeReplacement>
            <entry>
                <key>DOUBLE</key>
                <value>DOUBLE PRECISION</value>
            </entry>
        </typeReplacement>
        
        <!-- NOLOGGING, TABLESPACE-spec., etc. -->
        <tableProperties></tableProperties>
        
        <identityInserts>false</identityInserts>
        <embeddedLobSizeLimit>3980</embeddedLobSizeLimit>
        <binaryPattern>x'%s'</binaryPattern>
        <avoidLeftJoin>false</avoidLeftJoin>
        <useInlineViewsInDataBrowser>true</useInlineViewsInDataBrowser>
        <identifierQuoteString>"</identifierQuoteString>
    </dbms>
    
    <!-- for Derby -->
    <dbms>
        <id>DERBY</id>
        <displayName>Derby</displayName>
        <urlPattern>jdbc:derby.*</urlPattern>
        <sqlDialect>
            <needsValuesKeywordForDeletes>false</needsValuesKeywordForDeletes>
            <supportsInClauseForDeletes>false</supportsInClauseForDeletes>
            <supportsMultiRowInserts>false</supportsMultiRowInserts>
            <upsertMode>FROM_JL_DUAL</upsertMode>
        </sqlDialect>
        <statisticRenovator>
            <scriptFileName>script/derby/update_statistics.sql</scriptFileName>
        </statisticRenovator>
        
        <!-- NOLOGGING, TABLESPACE-spec., etc. -->
        <tableProperties></tableProperties>
        
        <identityInserts>false</identityInserts>
        <embeddedLobSizeLimit>3980</embeddedLobSizeLimit>
        <binaryPattern>x'%s'</binaryPattern>
        <avoidLeftJoin>false</avoidLeftJoin>
        <useInlineViewsInDataBrowser>true</useInlineViewsInDataBrowser>
        <identifierQuoteString>"</identifierQuoteString>
    </dbms>
    
    <!-- for SyBASE -->
    <dbms>
        <id>SYBASE</id>
        <displayName>Sybase</displayName>
        <urlPattern>jdbc:sybase.*|jdbc:jtds:sybase.*</urlPattern>
        <sqlDialect>
            <needsValuesKeywordForDeletes>false</needsValuesKeywordForDeletes>
            <supportsInClauseForDeletes>false</supportsInClauseForDeletes>
            <supportsMultiRowInserts>true</supportsMultiRowInserts>
            <upsertMode>DB2</upsertMode>
        </sqlDialect>
        <statisticRenovator>
            <scriptFileName>script/sybase/update_statistics.sql</scriptFileName>
        </statisticRenovator>
        <sqlLimitSuffix>TOP %s</sqlLimitSuffix>
        
        <!-- NOLOGGING, TABLESPACE-spec., etc. -->
        <tableProperties></tableProperties>
        
        <sessionTemporaryTableManager>
			<dmlTableReferencePrefix>#</dmlTableReferencePrefix>
			<ddlTableReferencePrefix>#</ddlTableReferencePrefix>
			<createTablePrefix>CREATE TABLE </createTablePrefix>
			<createTableSuffix></createTableSuffix>
			<createIndexPrefix>CREATE INDEX </createIndexPrefix>
			<createIndexSuffix></createIndexSuffix>
			<indexTablePrefix></indexTablePrefix>
			<dropTablePrefix>DROP TABLE </dropTablePrefix>
        </sessionTemporaryTableManager>
        <exportBlocks>timestamp</exportBlocks>
        <exportBlocks>TIMESTAMP</exportBlocks>
 		<typeReplacement>
            <entry>
                <key>timestamp</key>
                <value>datetime</value>
            </entry>
            <entry>
                <key>TIMESTAMP</key>
                <value>DATETIME</value>
            </entry>
        </typeReplacement>
        <identityInserts>true</identityInserts>
        <embeddedLobSizeLimit>3980</embeddedLobSizeLimit>
        <binaryPattern>0x%s</binaryPattern>
        <avoidLeftJoin>false</avoidLeftJoin>
        <useInlineViewsInDataBrowser>true</useInlineViewsInDataBrowser>
        <nullableContraint>NULL</nullableContraint>
        <identifierQuoteString>"</identifierQuoteString>
        <limitTransactionSize>
        	<limit>30000</limit>
        	<afterSelect>TOP(%1$s)</afterSelect>
        </limitTransactionSize>
    </dbms>
    
    <!-- for SQLite -->
    <dbms>
        <id>SQLITE</id>
        <displayName>SQLite</displayName>
        <urlPattern>jdbc:sqlite.*</urlPattern>
        <sqlDialect>
            <needsValuesKeywordForDeletes>false</needsValuesKeywordForDeletes>
            <supportsInClauseForDeletes>false</supportsInClauseForDeletes>
            <supportsMultiRowInserts>false</supportsMultiRowInserts>
            <upsertMode>FROM_JL_DUAL</upsertMode>
        </sqlDialect>
        <typeReplacement>
            <entry>
                <key>NVARCHAR</key>
                <value>VARCHAR</value>
            </entry>
            <entry>
                <key>nvarchar</key>
                <value>varchar</value>
            </entry>
        </typeReplacement>
        <sqlLimitSuffix>LIMIT %s</sqlLimitSuffix>
        
        <!-- NOLOGGING, TABLESPACE-spec., etc. -->
        <tableProperties></tableProperties>
        
        <sessionTemporaryTableManager>
            <createIndexPrefix>CREATE INDEX </createIndexPrefix>
            <createIndexSuffix></createIndexSuffix>
            <createTablePrefix>CREATE TEMPORARY TABLE </createTablePrefix>
            <createTableSuffix></createTableSuffix>
            <dropTablePrefix>DROP TABLE </dropTablePrefix>
            <indexTablePrefix></indexTablePrefix>
        </sessionTemporaryTableManager>
        <identityInserts>false</identityInserts>
        <embeddedLobSizeLimit>3980</embeddedLobSizeLimit>
        <binaryPattern>x'%s'</binaryPattern>
        <avoidLeftJoin>false</avoidLeftJoin>
        <useInlineViewsInDataBrowser>true</useInlineViewsInDataBrowser>
        <identifierQuoteString>"</identifierQuoteString>
    </dbms>
    
    <!-- for HSQLDB -->
    <dbms>
        <id>HSQL</id>
        <displayName>HSQLDB</displayName>
        <urlPattern>jdbc:hsqldb.*</urlPattern>
        <sqlDialect>
            <needsValuesKeywordForDeletes>false</needsValuesKeywordForDeletes>
            <supportsInClauseForDeletes>false</supportsInClauseForDeletes>
            <supportsMultiRowInserts>false</supportsMultiRowInserts>
            <upsertMode>FROM_JL_DUAL</upsertMode>
        </sqlDialect>
        <sqlLimitSuffix>LIMIT %s</sqlLimitSuffix>
        
        <!-- NOLOGGING, TABLESPACE-spec., etc. -->
        <tableProperties>NOLOGGING</tableProperties>
        
        <identityInserts>false</identityInserts>
        <embeddedLobSizeLimit>3980</embeddedLobSizeLimit>
        <binaryPattern>x'%s'</binaryPattern>
        <avoidLeftJoin>false</avoidLeftJoin>
        <useInlineViewsInDataBrowser>true</useInlineViewsInDataBrowser>
        <identifierQuoteString>"</identifierQuoteString>
    </dbms>
    
    <!-- for H2 -->
    <dbms>
        <id>H2</id>
        <displayName>H2</displayName>
        <urlPattern>jdbc:h2.*</urlPattern>
        <sqlDialect>
            <needsValuesKeywordForDeletes>false</needsValuesKeywordForDeletes>
            <supportsInClauseForDeletes>true</supportsInClauseForDeletes>
            <supportsMultiRowInserts>true</supportsMultiRowInserts>
            <upsertMode>FROM_DUAL</upsertMode>
        </sqlDialect>
        <jdbcProperties>
            <entry>
                <key>MODE</key>
                <value>DB2</value>
            </entry>
        </jdbcProperties>
        <typeReplacement>
            <entry>
                <key>NVARCHAR</key>
                <value>VARCHAR</value>
            </entry>
        </typeReplacement>
        <stringLiteralEscapeSequences>
            <entry>
                <key>'</key>
                <value>''</value>
            </entry>
            <entry>
                <key>\n</key>
                <value>' || char(10) || '</value>
            </entry>
            <entry>
                <key>\r</key>
                <value>' || char(13) || '</value>
            </entry>
        </stringLiteralEscapeSequences>
        <sqlLimitSuffix>LIMIT %s</sqlLimitSuffix>
        
        <!-- NOLOGGING, TABLESPACE-spec., etc. -->
        <tableProperties></tableProperties>

        <identityInserts>false</identityInserts>
        <embeddedLobSizeLimit>3980</embeddedLobSizeLimit>
        <binaryPattern>x'%s'</binaryPattern>
        <avoidLeftJoin>false</avoidLeftJoin>
        <useInlineViewsInDataBrowser>false</useInlineViewsInDataBrowser>
		<estimatedRowCountQuery>select TABLE_NAME, ROW_COUNT_ESTIMATE from INFORMATION_SCHEMA.TABLES where TABLE_SCHEMA = '%s'</estimatedRowCountQuery>
        <virtualColumnsQuery>SELECT TABLE_NAME, COLUMN_NAME from INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA='${SCHEMA}' AND IS_COMPUTED</virtualColumnsQuery>
        <identifierQuoteString>"</identifierQuoteString>
        <explainPrepare></explainPrepare>
        <explainQuery>explain %1$s</explainQuery>
        <explainCleanup></explainCleanup>
        <constraintsQuery>
Select CNAME, TNAME, COLNAME, CTYPE, DETAIL From
(
	Select C.CONSTRAINT_NAME CNAME, C.TABLE_NAME TNAME, C.COLUMN_LIST COLNAME, 'PK' CTYPE, null DETAIL, 1 POS, 1 TYPEPOS
	From 
		INFORMATION_SCHEMA.CONSTRAINTS C
	where
		C.CONSTRAINT_TYPE = 'PRIMARY KEY'
		AND C.TABLE_SCHEMA = '%1$s'
	union all
	Select I.INDEX_NAME CNAME, I.TABLE_NAME TNAME, I.COLUMN_NAME COLNAME, 'Unique' CTYPE, null DETAIL, I.ORDINAL_POSITION POS, 2 TYPEPOS
	From 
		INFORMATION_SCHEMA.INDEXES I
	where
		I.INDEX_TYPE_NAME = 'UNIQUE INDEX'
		AND I.TABLE_SCHEMA = '%1$s'
	union all
	Select C.CONSTRAINT_NAME CNAME, C.TABLE_NAME TNAME, case when C.COLUMN_LIST is null then '' else C.COLUMN_LIST end COLNAME, 'Check' CTYPE, CHECK_EXPRESSION DETAIL, 1 POS, 3 TYPEPOS
	From 
		INFORMATION_SCHEMA.CONSTRAINTS C
	where
		C.CONSTRAINT_TYPE = 'CHECK'
		AND C.TABLE_SCHEMA = '%1$s'
) pk order by TYPEPOS, CNAME, TNAME, POS, COLNAME
		</constraintsQuery>
        <objectRenderers>
       		<name>Triggers</name>
        	<iconURL>/net/sf/jailer/ui/resource/triggers.png</iconURL>
			<itemDescription>
	        	<iconURL>/net/sf/jailer/ui/resource/trigger.png</iconURL>
			</itemDescription>
			<listQuery>select TRIGGER_CATALOG, TRIGGER_SCHEMA, TRIGGER_NAME, TRIGGER_TYPE, TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, BEFORE, JAVA_CLASS, QUEUE_SIZE, NO_WAIT, REMARKS, SQL, ID FROM information_schema.triggers WHERE TRIGGER_SCHEMA = '%1$s'</listQuery>
		</objectRenderers>
  	  	<objectRenderers>
       		<name>Sequences</name>
        	<iconURL>/net/sf/jailer/ui/resource/sequences.png</iconURL>
			<itemDescription>
	        	<iconURL>/net/sf/jailer/ui/resource/sequence.png</iconURL>
			</itemDescription>
			<listQuery>select SEQUENCE_NAME, SEQUENCE_CATALOG, SEQUENCE_SCHEMA, CURRENT_VALUE, INCREMENT, IS_GENERATED, REMARKS, CACHE, ID from information_schema.sequences where SEQUENCE_SCHEMA = '%1$s'</listQuery>
		</objectRenderers>
      </dbms>

</configuration>
